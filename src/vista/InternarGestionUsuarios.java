package vista;

import conexion.Conexion;
import controlador.Ctrl_Usuario;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.Usuario;

/**
 *
 * @author yanni
 */
public class InternarGestionUsuarios extends javax.swing.JInternalFrame {

    private int Id_Usuarios = 0;

    public InternarGestionUsuarios() {
        initComponents();
        this.setSize(new Dimension(900, 500));
        this.setTitle("ADMINISTRAR USUARIOS.");

        //cargar tablas
        this.cargartablaUsuarios();

        //imagen de fondo en Label
        ImageIcon wallpaper = new ImageIcon("src/images/fondorojo1111.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(900, 500, WIDTH));
        jLabelwallpaper.setIcon(icono);
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Usuarios = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnactualizar_usuarios = new javax.swing.JButton();
        btneliminar_Usuarios = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtnombre_Users = new javax.swing.JTextField();
        txtapellido_Users = new javax.swing.JTextField();
        txttelefono_Users = new javax.swing.JTextField();
        txtPass = new javax.swing.JTextField();
        txtUsers = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cmbxRol_Usuario = new javax.swing.JComboBox<>();
        jLabelwallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 20)); // NOI18N
        jLabel2.setText("ÁREA DE CONTROL:USUARIOS");
        jLabel2.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 6, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 153));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_Usuarios.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jTable_Usuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_Usuarios);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 840, 260));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 860, 280));

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnactualizar_usuarios.setBackground(java.awt.Color.blue);
        btnactualizar_usuarios.setFont(new java.awt.Font("Felix Titling", 1, 14)); // NOI18N
        btnactualizar_usuarios.setForeground(new java.awt.Color(255, 255, 255));
        btnactualizar_usuarios.setText("ACTUALIZAR");
        btnactualizar_usuarios.setBorder(new javax.swing.border.LineBorder(java.awt.Color.red, 1, true));
        btnactualizar_usuarios.setBorderPainted(false);
        btnactualizar_usuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnactualizar_usuariosActionPerformed(evt);
            }
        });
        jPanel2.add(btnactualizar_usuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 110, 30));

        btneliminar_Usuarios.setBackground(java.awt.Color.pink);
        btneliminar_Usuarios.setFont(new java.awt.Font("Felix Titling", 1, 14)); // NOI18N
        btneliminar_Usuarios.setText("ELIMINAR");
        btneliminar_Usuarios.setBorder(new javax.swing.border.LineBorder(java.awt.Color.red, 1, true));
        btneliminar_Usuarios.setBorderPainted(false);
        btneliminar_Usuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminar_UsuariosActionPerformed(evt);
            }
        });
        jPanel2.add(btneliminar_Usuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 71, 110, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 40, 130, 130));

        jPanel3.setBackground(new java.awt.Color(153, 255, 255));
        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Sitka Small", 3, 16)); // NOI18N
        jLabel4.setText("NOMBRE:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 10, -1, -1));

        jLabel5.setFont(new java.awt.Font("Sitka Small", 3, 16)); // NOI18N
        jLabel5.setText("APELLIDO:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 55, -1, -1));

        jLabel6.setFont(new java.awt.Font("Sitka Small", 3, 16)); // NOI18N
        jLabel6.setText("TELEFONO:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 100, 110, -1));

        jLabel7.setFont(new java.awt.Font("Sitka Small", 3, 16)); // NOI18N
        jLabel7.setText("USUARIO:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, -1, -1));

        jLabel8.setFont(new java.awt.Font("Sitka Small", 3, 16)); // NOI18N
        jLabel8.setText("CONTRASEÑA:");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(312, 55, 130, -1));

        txtnombre_Users.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jPanel3.add(txtnombre_Users, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 8, 190, -1));

        txtapellido_Users.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jPanel3.add(txtapellido_Users, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 52, 190, -1));

        txttelefono_Users.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jPanel3.add(txttelefono_Users, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 97, 190, -1));

        txtPass.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        txtPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassActionPerformed(evt);
            }
        });
        jPanel3.add(txtPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 52, 230, -1));

        txtUsers.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        txtUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsersActionPerformed(evt);
            }
        });
        jPanel3.add(txtUsers, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 8, 230, -1));

        jLabel9.setFont(new java.awt.Font("Sitka Small", 3, 16)); // NOI18N
        jLabel9.setText("ROL:");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(396, 100, 60, -1));

        cmbxRol_Usuario.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cmbxRol_Usuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ROL:", "ADMINISTRADOR", "ASISTENTE" }));
        jPanel3.add(cmbxRol_Usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 98, 230, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 690, 130));
        getContentPane().add(jLabelwallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnactualizar_usuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnactualizar_usuariosActionPerformed
        //TODO add your handling code here:
        String rol = cmbxRol_Usuario.getSelectedItem().toString().trim();
       Usuario usuario = new Usuario();
       Ctrl_Usuario controlusuarios = new Ctrl_Usuario();
       
        if (Id_Usuarios == 0) {
            JOptionPane.showMessageDialog(null, "Seleccione Un Usuario Por Favor.");
        } else {
            if (txtnombre_Users.getText().isEmpty() || txtapellido_Users.getText().isEmpty() || txtUsers.getText().isEmpty() || txtPass.getText().isEmpty() || txttelefono_Users.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Llene Todo los Campos.");
            } else {
                
                usuario.setNombres_Usuarios(txtnombre_Users.getText().trim());
                usuario.setApellido_Usuarios(txtapellido_Users.getText().trim());
                usuario.setUsers(txtUsers.getText().trim());
                usuario.setPass(txtPass.getText().trim());
                usuario.setTelefono_Users(txttelefono_Users.getText().trim());
                     if (rol.equalsIgnoreCase("ROL:")) {
                    JOptionPane.showMessageDialog(null, "Seleccione Un Rol Por Favor.");
                }else{
                      if (rol.equalsIgnoreCase("ADMINISTRADOR")) {
                                usuario.setRol("ADMINISTRADOR");
                            } else if (rol.equalsIgnoreCase("ASISTENTE")) {
                                usuario.setRol("ASISTENTE");
                            }
                
                if (controlusuarios.ActualizarClientes(usuario, Id_Usuarios)) {
                    JOptionPane.showMessageDialog(null, "Datos De Usuario Actualizados Exitosamente.");
                    this.LimpiarUsers();
                    this.cargartablaUsuarios();
                    Id_Usuarios = 0;
                     
                } else {
                    JOptionPane.showMessageDialog(null, "Error al Actualizar Usuario.");
                }
                this.LimpiarUsers();
            }
            }
        }
        
    }//GEN-LAST:event_btnactualizar_usuariosActionPerformed

    private void btneliminar_UsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminar_UsuariosActionPerformed
        // TODO add your handling code here:
        Ctrl_Usuario controlUsuario = new Ctrl_Usuario();
        if (Id_Usuarios==0) {
            JOptionPane.showMessageDialog(null, "Seleccione Un Usuario Por Favor.");
        } else {
            if (!controlUsuario.EliminarUsuarios(Id_Usuarios)) {
                JOptionPane.showMessageDialog(null, "Datos Del Usuario Eliminado Exitosamente.");
                this.cargartablaUsuarios();
                this.LimpiarUsers();
                Id_Usuarios = 0;
            } else {
                JOptionPane.showMessageDialog(null, "Error al Eliminar Usuario.");
                this.LimpiarUsers();
            }    
        }
    }//GEN-LAST:event_btneliminar_UsuariosActionPerformed

    private void txtPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassActionPerformed

    private void txtUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsersActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnactualizar_usuarios;
    private javax.swing.JButton btneliminar_Usuarios;
    private javax.swing.JComboBox<String> cmbxRol_Usuario;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelwallpaper;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_Usuarios;
    private javax.swing.JTextField txtPass;
    private javax.swing.JTextField txtUsers;
    private javax.swing.JTextField txtapellido_Users;
    private javax.swing.JTextField txtnombre_Users;
    private javax.swing.JTextField txttelefono_Users;
    // End of variables declaration//GEN-END:variables

    //metodo para limpiar campos de usuarios..
    private void LimpiarUsers() {
        txtnombre_Users.setText("");
        txtapellido_Users.setText("");
        txtUsers.setText("");
        txtPass.setText("");
        txttelefono_Users.setText("");
        cmbxRol_Usuario.setSelectedItem("ROL:");
    }

    //metodo para mostrar los usuarios registrados.
    private void cargartablaUsuarios() {
        Connection con = Conexion.conectar();
        DefaultTableModel model = new DefaultTableModel();
        String sql = "select * from usuarios_dadis";
        Statement st;
        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            InternarGestionUsuarios.jTable_Usuarios = new JTable(model);
            InternarGestionUsuarios.jScrollPane1.setViewportView(InternarGestionUsuarios.jTable_Usuarios);
            //metodo para agregar datos a las tablas
            model.addColumn("N°");
            model.addColumn("Nombre");
            model.addColumn("Apellido");
            model.addColumn("Usuario");
            model.addColumn("Contraseña");
            model.addColumn("Telefono");
            model.addColumn("Rol");
            while (rs.next()) {

                Object fila[] = new Object[7];
                for (int i = 0; i < 7; i++) {
                    fila[i] = rs.getObject(i + 1);
                }

                model.addRow(fila);
            }
            con.close();

        } catch (SQLException e) {
            System.out.println("Error al Momento de Llenar La Tabla Usuarios." + e);
        }

        jTable_Usuarios.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_Usuarios.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    Id_Usuarios = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosUsuarios(Id_Usuarios);
                }
            }

        });
    }

//metodo que envia datos seleccionados de los usuarios...
    private void EnviarDatosUsuarios(int Id_Usuarios) {
        try {
            Connection con = Conexion.conectar();
            PreparedStatement pst = con.prepareStatement(
                    "select * from usuarios_dadis where Id_Usuarios = '" + Id_Usuarios + "'");
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                txtnombre_Users.setText(rs.getString("Nombres_Usuarios"));
                txtapellido_Users.setText(rs.getString("Apellidos_Usuarios"));
                txtUsers.setText(rs.getString("Users"));
                txtPass.setText(rs.getString("Pass"));
                txttelefono_Users.setText(rs.getString("Telefono_Users"));
                String rol = rs.getString("Rol");
                switch (rol) {
                    case "ADMINISTRADOR":
                        cmbxRol_Usuario.setSelectedItem("ADMINISTRADOR");
                        break;
                    case "ASISTENTE":
                        cmbxRol_Usuario.setSelectedItem("ASISTENTE");
                        break;
                    case "ROL":
                         default:
                        cmbxRol_Usuario.setSelectedItem("ROL:");
                        break;
                }
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al Seleccionar Usuario." + e);
        }
    }
}
